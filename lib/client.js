// Generated by CoffeeScript 1.3.3
(function() {
  var app;

  app = angular.module('node', ['ui', 'ui.bootstrap']);

  app.factory('node', function($rootScope) {
    var Server;
    Server = (function() {

      function Server() {
        this.code = "log 'Hello world'";
        this.logs = "Connecting...\n";
        this.handleConnectionLost();
      }

      Server.prototype.updateAngularJs = function() {
        return !$rootScope.$$phase && $rootScope.$apply();
      };

      Server.prototype.handleConnectionLost = function() {
        var _this = this;
        this.list = null;
        this.active = null;
        this.online = false;
        this.print("Trying to connect");
        this.sock = new SockJS('/echo');
        this.sock.onopen = function() {
          return _this.initSock();
        };
        return this.sock.onclose = function() {
          return _this.handleConnectionLost();
        };
      };

      Server.prototype.initSock = function() {
        var _this = this;
        this.online = true;
        this.print('Connected to UnrealEngine3');
        this.send({
          list: null
        });
        return this.sock.onmessage = function(e) {
          var data, k, v;
          data = JSON.parse(e.data);
          for (k in data) {
            v = data[k];
            switch (k) {
              case "refresh":
                window.location.reload();
                break;
              case "log":
                _this.print(v);
                break;
              case "code":
              case "title":
              case "active":
              case "list":
                _this[k] = v;
                break;
              case "invalidated":
                _this.send({
                  list: null
                });
            }
          }
          return _this.updateAngularJs();
        };
      };

      Server.prototype.refresh = function() {
        return window.location.refresh();
      };

      Server.prototype.send = function(json) {
        return this.sock.send(JSON.stringify(json));
      };

      Server.prototype.load = function(target) {
        return this.send({
          load: target
        });
      };

      Server.prototype.discard = function(target) {
        return this.send({
          discard: target
        });
      };

      Server.prototype.save = function() {
        return this.send({
          save: {
            code: this.code,
            title: this.title
          }
        });
      };

      Server.prototype.run = function() {
        return this.send({
          run: this.code
        });
      };

      Server.prototype.print = function(msg) {
        console.log(msg);
        this.logs += msg + "\n";
        return this.updateAngularJs();
      };

      return Server;

    })();
    return new Server();
  });

  app.controller('CodeCtrl', function($scope, node) {
    $scope.server = node;
    return $scope.status = function() {
      if (node.online) {
        return "ONLINE";
      } else {
        return "OFFLINE";
      }
    };
  });

}).call(this);
